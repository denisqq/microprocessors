.include "m8515def.inc"		;define для ATmega8515

	.EQU 	Frqnc = 4000000						;Частота МП в Гц
	.EQU 	BaudRate = 19200					;Скорость передачи  по UART
	.EQU 	Rate = Frqnc/(16*BaudRate)-1		;Определение параметра UBRR

	.EQU	BTNPORT	=PORTA
	.EQU	LEDPORT	=PORTB
	.EQU	BTNDDR	=DDRA
	.EQU	LEDDDR	=DDRB
	.EQU	BTNPIN	=PINA
	.EQU	LEDPIN	=PINB

	.DEF	BUF	=r16      ;*	r16 - буфер	
	.DEF	POS	=r17      ;r17 - сотстояние светодиодов	
	.DEF	CURBTN	=r18  ;*	r18 - состояние кнопок
	.DEF	RUN1FLG	=r19  ;*	r19 - флаг 
	.DEF	RUN1CNT	=r20  ;*	r20 - счетчик времени для мигания светодиодов
	//.DEF	NAMEFLG	=r21  ;*	r21 - флаг имени 3
	//.DEF	NAMECNT	=r22  ;*	r22 - счетчик времени для имени 3
	.DEF	BAK1CNT	=r23  ;*	r23 - счетчики обратного отсчета для перезапуска бегущей единицы
	.DEF	BAKFCNT	=r24  ;*	r24 - 		для имени первого и второго разработчика
	.DEF	BAKSCNT	=r25  ;*	r25 - 		для имени третьего разработчика
	.DEF	RUN1FLG2 =r26 ;*	r21 - флаг идля мигания светодиодами  1 - true, 0 - false

.CSEG    ;абсолютный сегмент в памяти программ 

.ORG 0x0000
			RJMP	SETUP
.ORG OVF0addr
			RJMP	TIMER0_OF
.ORG URXCaddr			
			RJMP	USART_RX

;==========[[Установка параметров контроллера.]]=====================================================			
SETUP:		CLI									;Запрет прерываний

;-----------|Инициализация стека|--------------------------------------------------------------------
			LDI		BUF,HIGH(RAMEND) 
            OUT		SPH,BUF          
            LDI		BUF,LOW(RAMEND) 
            OUT		SPL,BUF

;-----------|Установка ждущего режима (Idle)|--------------------------------------------------------
			IN		BUF,EMCUCR
			ANDI	BUF,0b01111111				;SM0<<0
			OUT		EMCUCR,BUF

			IN		BUF,MCUCR
			SBR		BUF,(1<<SE)
			ANDI	BUF,0b11101111				;SM1<<0
			OUT		MCUCR,BUF

			IN		BUF,MCUCSR
			SBR		BUF,0b11011111				;SM2<<0
			OUT		MCUCSR,BUF
			
			LDI		BUF,0b11111111
			OUT		LEDDDR,BUF					;Установка режима работы OUT

			LDI		BUF,0b00000000
			OUT		BTNDDR,BUF					;Установка режима работы IN

			LDI		RUN1CNT,0
			LDI		BAK1CNT,100
			LDI		BAKFCNT,100
			LDI		BAKSCNT,100

;-----------|Установка USART|------------------------------------------------------------------------
USART_SETUP:LDI		BUF,HIGH(Rate)
			OUT		UBRRH,BUF
			LDI		BUF,LOW(Rate)
			OUT		UBRRL,BUF
			
			LDI		BUF,(1<<RXCIE)|(1<<RXEN)|(1<<TXEN)   ;RXCE-hразрешение прерывания по завершению приема  RXEN-разрешение приема 
			                                             ; TXEN- разрешение передачи
			OUT		UCSRB,BUF    ; установка битов в регистр  UCSRB

			LDI		BUF,(1<<UCSZ0)|(1<<UCSZ1)|(1<<URSEL)  ;UCSZ0,UCSZ1-определение количества бит данных на 8 бит 
			                                              ;URSEL-выбираем регистр UCSRC, а не UBRR
			OUT		UCSRC,BUF     ; установка битов в регистр  UCSRC

;-----------|Настройка таймера T0|-------------------------------------------------------------------
SETUP_T0:
			LDI		BUF,100						;255-124=131 // 255 = 1 байт, 125 тактов до пререполнения // 16МГц / 1024 = 15625Гц
			OUT		TCNT0,BUF                   ;счетный регистр 

			LDI		BUF,0b00000010				;С. 258 TCCR0    //OCIE0 - разрешение прерываний по совпадению 
			OUT 	TIMSK,BUF

			LDI		BUF,0b00000100				;С. 270 TCCR0    //выбор предделителяна 1024 
			OUT 	TCCR0,BUF

;-----------|Сброс используемых регистров общего назначения|------------------------------------------

			LDI		BUF,0
			LDI		POS,0
			LDI		CURBTN,0
			LDI		RUN1FLG,0
			LDI		RUN1CNT,0
			//LDI		NAMEFLG,0
			LDI		RUN1FLG2,5
			//LDI		NAMECNT,0
			LDI		BAK1CNT,0	
			LDI		BAKFCNT,0
			LDI		BAKSCNT,0

			SEI									;Разрешение прерываний
;====================================================================================================

;==========[[Цикл сна.]]=============================================================================
MAIN:		SLEEP
			RJMP	MAIN
;====================================================================================================

;==========[[Обработчик прерывания по таймеру T0]]===================================================
;==========[[Запускается каждые 10мс]]===============================================================
TIMER0_OF:	LDI		BUF,100					;100 ~ 10ms 124 = 8ms
			OUT		TCNT0,BUF
			IN		CURBTN,BTNPIN   //подключение кнопок

			SBRC	CURBTN,0    //если кнопка 1 нажата
			RJMP	PC+2;      //PC- 16 регистр(содержит адрес команды,счетчик команд, адрес следующенй исполняемой команды ) 
			RCALL	SET_1      //вызываем первую программу для положения светодиодов

			SBRC	CURBTN,1   //если кнопка 2 нажата
			RJMP	PC+2;
			RCALL	SET_2     //вызываем вторую программу для положения светодиодов

			SBRC	CURBTN,2   //если кнопка 3 нажата
			RJMP	PC+5;
			CPI		BAK1CNT,100   //счетчик времени для мигания
			BRLO	PC+3
			RCALL	START_RUN_1    //мигание светодиодами 
			LDI		BAK1CNT,0      //обнуление счетчика 

			SBRC	CURBTN,3      //если кнопка 4 нажата
			RJMP	PC+5;
			CPI		BAKFCNT,100   //счетчик времени для имени
			BRLO	PC+3
			RCALL	FIRST_NAME        //вывод имени первого разработчика 
			LDI		BAKFCNT,0     //обнуление счетчика 

			SBRC	CURBTN,4      //если кнопка 5 нажата
			RJMP	PC+5;
			CPI		BAKFCNT,100   //счетчик времени для имени
			BRLO	PC+3
			RCALL	SECOND_NAME       //вывод имени второго разработчика
			LDI		BAKFCNT,0     //обнуление счетчика 

			CPI		RUN1FLG,1    //проверка флага если установлен в единицу
			BRNE	PC+2;
			RCALL	RUN_1        //вызов мигания

			CPI		BAK1CNT,100  //проверка счетчика 
			BRSH	PC+2         //перейти если равно или больше
			INC		BAK1CNT      //инкремент счетчика

			CPI		BAKFCNT,100
			BRSH	PC+2          //перейти если равно или больше
			INC		BAKFCNT

			CPI		BAKSCNT,100
			BRSH	PC+2          //перейти если равно или больше
			INC		BAKSCNT
END:		RETI
;====================================================================================================




;==========[[Первое положение]]===========================================================
SET_1:
			LDI		RUN1FLG,0
			LDI		POS,15   ;00001111
			COM		POS         //дополнение до единицы
			OUT		LEDPORT,POS  //вывод на порт 
			COM		POS          //дополнение до единицы
			//LDI		RUN1CNT,0
			LDI		RUN1FLG2,1  //установка флага для мигания 
			RET
;==========[[Второе положение ]]===========================================================
SET_2:
			LDI		RUN1FLG,0
			LDI		POS,240     ;11110000
			COM		POS
			OUT		LEDPORT,POS
			COM		POS
			LDI		RUN1CNT,0
			LDI		RUN1FLG2,0 - не мигаем
			RET

;==========[[Запуск бегущей единицы.]]======================================================================
START_RUN_1:
			LDI		RUN1FLG,1  //установка флагов
			LDI		RUN1CNT,0
			RET

;==========[[Мигание светодиодами.]]======================================================================
RUN_1:
            
            CPI		RUN1CNT,20	;RUN1CNT - счетчик времени
			CPI     RUN1FLG2,0   //если флаг равен 0
			breq p1             // перейти к программе р1

			CPI    RUN1FLG2,1   //если флаг равен 1
			breq p2             // перейти к программе р2
		

p1:	        CPI		RUN1CNT,75					;RUN1CNT - счетчик времени
			BRNE	STAGE0                      //перейти к 0
			LDI		RUN1CNT,0                   //обнуляем счетчик 

p2:		    CPI		RUN1CNT,75					;RUN1CNT - счетчик времени
			BRNE	STAGE5                       //перейти к 5
			LDI		RUN1CNT,0                     //обнуляем счетчик 

STAGE0:		
			CPI		RUN1CNT,0                   //если счетчик равен 0
			BRNE	RUN_INC_AND_EXIT                      //переходим на 4 
			CPI		POS,240						;Если POS = 111110000b,
			BRNE	STAGE1							;=>иначе: переходим на 1 
			RJMP	PORT_OUT                          ;то: выводим
	
STAGE1:		
			CPI		POS,0						;Если POS = 00000000b
			BRNE	EMPTY_BUF							;иначе => обнуление буфера
			LDI		POS,15						;то POS = 01010101b
			RJMP	PORT_OUT						;=> (сразу вывод на порт)

EMPTY_BUF:		
			LDI		BUF,0						;иначе, обнуляем буфер
			MUL		POS,BUF						;r0 = POS*BUF
			MOV		POS,r0						;POS = r0

PORT_OUT:		
			COM		POS
			OUT		LEDPORT,POS					;Вывод POS на порт светодиодов
			COM		POS

RUN_INC_AND_EXIT:	
			INC		RUN1CNT                     //инкрментируем счетчик
            RET	    

STAGE5:		
			CPI		RUN1CNT,0                     //если счетчик равен 0
			BRNE	RUN_INC                         // то: перейти к 9
			CPI		POS,15						;Если POS = 01010101b,
			BRNE	STAGE6							;=> (иначе переходим к 6)
			RJMP	STAGE8                          ; то: переходим к 8 

	
STAGE6:		
			CPI		POS,0						;иначе Если POS = 00000000b
			BRNE	STAGE7							;=> (иначе переход на 7 )
			LDI		POS,240				        ;то POS = 10101010b
			RJMP	STAGE3							;=> (сразу вывод на порт)

STAGE7:		
			LDI		BUF,0						;иначе
			MUL		POS,BUF						;r0 = POS*BUF
			MOV		POS,r0						;POS = r0

STAGE8:		
			COM		POS
			OUT		LEDPORT,POS					;Вывод POS на порт светодиодов
			COM		POS

RUN_INC:	INC		RUN1CNT                     //инкрментируем счетчик
            RET	
		
;====================================================================================================

;==========[[Отправка по USART]]=====================================================================
USART_TX:	CLI    //глобальный запрет прерываний 
			OUT		UDR,BUF
			SBIS	UCSRA,UDRE     //если бит установлен пропускаем следующую команду UDRE_флаг опустошение регистра передатчика
			                       //1-если буфер пустой 
			RJMP	PC-1
			SEI    //глобальное разрешение прерываний
			RET
;====================================================================================================

;==========[[Прием по USART]]========================================================================
USART_RX:	CLI     //глобальный запрет прерываний 
			IN		BUF,UDR
			
			CPI		BUF,68  //кнопка "N" на клавиатуре
			BRNE	PC+2;
			RCALL	FIRST_NAME  //вызов имени 1 
			CPI		BUF,69   //кнопка "L" на клавиатуре
			BRNE	PC+2;
			RCALL	SECOND_NAME   //вызов имени 2
			SEI     //глобальное разрешение прерываний
			RETI
;====================================================================================================

;==========[[Отправка имени разработчика 1]]=========================================================
FIRST_NAME:		

			LDI		BUF,68						;D
			RCALL	USART_TX
			LDI		BUF,56						;e
			RCALL	USART_TX
	        LDI		BUF,110						;n
			RCALL	USART_TX
			LDI		BUF,105						;i
			RCALL	USART_TX
			LDI		BUF,115						;s
			RCALL	USART_TX
			LDI		BUF,13						;CR    //возврат каретки 
			RCALL	USART_TX
			LDI		BUF,10						;LF    //перевод строки
			RCALL	USART_TX
			RET
;====================================================================================================
;==========[[Отправка имени разработчика 2]]=========================================================
SECOND_NAME:
			LDI		BUF,69						;E
			RCALL	USART_TX
			LDI		BUF,103						;g
			RCALL	USART_TX
			LDI		BUF,111						;o
			RCALL	USART_TX
			LDI		BUF,114						;r
			RCALL	USART_TX
			
			LDI		BUF,13						;CR
			RCALL	USART_TX
			LDI		BUF,10						;LF
			RCALL	USART_TX
			RET
;====================================================================================================

